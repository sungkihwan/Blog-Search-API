buildscript {
	ext {
		springBootVersion = '2.7.9'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.spring.gradle:dependency-management-plugin:1.0.15.RELEASE"
	}
}

subprojects {

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	apply plugin: 'java-library'
	apply plugin: 'maven-publish'
	apply plugin: 'java-test-fixtures'

	sourceCompatibility = '11'
	group = 'com.daum'
	version = '0.0.1-SNAPSHOT'

	configurations {
		compileOnly {
			extendsFrom configurations.annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}

}

project(':blog-search') {
	bootJar { enabled = true }
	jar { enabled = true }

	dependencies {
		implementation project(':popular-keyword')

		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-webflux'
		testImplementation 'io.projectreactor:reactor-test:3.4.13'

		testImplementation(testFixtures(project(":popular-keyword")))
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	}

	// Mac 인경우 DNS 설정
	def isMacOs = { ->
		return System.properties['os.name'].toLowerCase().contains('mac')
	}

	if (isMacOs()) {
		dependencies {
			runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.76.Final:osx-aarch_64'
		}
	}

	test {
		useJUnitPlatform()
	}
}

project(':popular-keyword') {
//	별도의 서비스로 띄우려면 설정
//	bootJar { enabled = true }
//	jar { enabled = true }

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		runtimeOnly 'com.h2database:h2'

		// API dependencies are visible to consumers when building
		testFixturesApi 'org.apache.commons:commons-lang3:3.9'

		// Implementation dependencies are not leaked to consumers when building
		testFixturesImplementation 'org.apache.commons:commons-text:1.6'

//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	}

	test {
		useJUnitPlatform()
	}
}




